@startuml Hotel Management ERD
!define ENTITY class
!define RELATIONSHIP -->

skinparam class {
    BackgroundColor LightBlue
    BorderColor Black
    FontSize 10
}

skinparam arrow {
    Color Black
    FontSize 8
}

entity User {
    + UserID : int <<PK>>
    --
    Username : varchar
    Password : varchar
    Email : varchar
    FullName : varchar
    Phone : varchar
    Address : varchar
    DateOfBirth : date
    Gender : varchar
    Avatar : varchar
    IsActive : bit
    CreatedAt : datetime
    UpdatedAt : datetime
    RoleID : int <<FK>>
}

entity Role {
    + RoleID : int <<PK>>
    --
    RoleName : varchar
    Description : varchar
}

entity Customer {
    + CustomerID : int <<PK,FK>>
    --
    LoyaltyPoints : int
    MembershipLevel : varchar
}

entity RoomType {
    + TypeId : int <<PK>>
    --
    TypeName : varchar
    Description : text
    BasePrice : decimal
    MaxOccupancy : int
    BedType : varchar
    RoomSize : float
    IsActive : bit
}

entity Room {
    + RoomID : int <<PK>>
    --
    RoomNumber : varchar
    Floor : int
    Status : varchar
    Description : text
    TypeId : int <<FK>>
    IsActive : bit
    CreatedAt : datetime
    UpdatedAt : datetime
}

entity Amenity {
    + AmenityID : int <<PK>>
    --
    AmenityName : varchar
    Description : varchar
    Icon : varchar
    IsActive : bit
}

entity RoomAmenity {
    + RoomAmenityID : int <<PK>>
    --
    AmenityID : int <<FK>>
    RoomID : int <<FK>>
}

entity RoomImage {
    + ImageID : int <<PK>>
    --
    RoomID : int <<FK>>
    ImageURL : varchar
    Caption : varchar
    IsPrimary : bit
    UploadedAt : datetime
}

entity Booking {
    + BookingID : int <<PK>>
    --
    CustomerID : int <<FK>>
    BookingDate : datetime
    CheckInDate : date
    CheckOutDate : date
    TotalAmount : decimal
    Status : varchar
    SpecialRequests : text
    CreatedAt : datetime
    UpdatedAt : datetime
}

entity BookingRoom {
    + BookingRoomID : int <<PK>>
    --
    BookingID : int <<FK>>
    RoomID : int <<FK>>
    CheckInDate : date
    CheckOutDate : date
    RoomPrice : decimal
    Status : varchar
}

entity Service {
    + ServiceID : int <<PK>>
    --
    ServiceName : varchar
    Description : text
    Price : decimal
    Category : varchar
    IsActive : bit
    CreatedAt : datetime
}

entity BookingService {
    + BookingID : int <<PK,FK>>
    + ServiceID : int <<PK,FK>>
    --
    Quantity : int
    UnitPrice : decimal
    TotalPrice : decimal
    UpdateAt : datetime
}

entity Promotion {
    + PromotionID : int <<PK>>
    --
    PromotionCode : varchar
    PromotionName : varchar
    Description : text
    DiscountType : varchar
    DiscountValue : decimal
    MinBookingAmount : decimal
    MaxDiscount : decimal
    StartDate : date
    EndDate : date
    IsActive : bit
    UsageLimit : int
    UsedCount : int
}

entity BookingPromotion {
    + BookingPromotionID : int <<PK>>
    --
    BookingID : int <<FK>>
    PromotionID : int <<FK>>
    DiscountAmount : decimal
    AppliedAt : datetime
}

entity Invoice {
    + InvoiceID : int <<PK>>
    --
    BookingID : int <<FK>>
    InvoiceNumber : varchar
    IssueDate : datetime
    DueDate : datetime
    TotalAmount : decimal
    TaxAmount : decimal
    DiscountAmount : decimal
    NetAmount : decimal
    Status : varchar
    PaymentMethod : varchar
    PaidAt : datetime
}

entity GuestFeedback {
    + FeedbackID : int <<PK>>
    --
    BookingID : int <<FK>>
    CustomerID : int <<FK>>
    Rating : int
    Comment : text
    CreatedAt : datetime
    IsApproved : bit
}

entity BlogCategories {
    + CategoryID : int <<PK>>
    --
    CategoryName : varchar
    Description : text
    IsActive : bit
}

entity BlogPost {
    + PostID : int <<PK>>
    --
    Title : varchar
    Content : text
    Summary : varchar
    AuthorID : int <<FK>>
    CategoryID : int <<FK>>
    PublishDate : datetime
    Status : varchar
    ViewCount : int
    FeaturedImage : varchar
    Tags : varchar
}

' Relationships
User ||--o{ Customer : "is a"
User }o--|| Role : "has"
User ||--o{ BlogPost : "writes"

Customer ||--o{ Booking : "makes"
Customer ||--o{ GuestFeedback : "gives"

RoomType ||--o{ Room : "has"
Room ||--o{ RoomAmenity : "has"
Room ||--o{ RoomImage : "has"
Room ||--o{ BookingRoom : "booked in"

Amenity ||--o{ RoomAmenity : "available in"

Booking ||--o{ BookingRoom : "includes"
Booking ||--o{ BookingService : "includes"
Booking ||--o{ BookingPromotion : "uses"
Booking ||--|| Invoice : "generates"
Booking ||--o{ GuestFeedback : "receives"

Service ||--o{ BookingService : "used in"
Promotion ||--o{ BookingPromotion : "applied to"

BlogCategories ||--o{ BlogPost : "contains"

@enduml